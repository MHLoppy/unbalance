#!/usr/bin/env bash

function error {
	NAME=$1

	printf "$1"
	exit 1
}

APP_VERSION=$(cat VERSION 2> /dev/null)

if [[ -z $APP_VERSION ]]; then
	error "Unable to find VERSION file. Please check and try again"
fi

echo "Version is $APP_VERSION"

# bump plugin date based version
PLG_VERSION=$(cat PLGVER 2> /dev/null)
DATE=$(date +%Y.%m.%d)

if [[ -n $PLG_VERSION ]]; then
	# second bump on this date, add first incremental letter (a)
	if [[ $PLG_VERSION == "v$DATE" ]]; then
		DATE=$(date +%Y.%m.%d)a
	else
		# there's a previous bump on this date, increment the letter
		# it will be in the form of v2018.01.09a or b, c, etc
		LEN=${#PLG_VERSION}
		if [[ $LEN = 12 ]]; then
			CHAR=${PLG_VERSION:11:1}
			CHAR=$(echo "$CHAR" | tr "a-z" "b-z_")
			DATE=$(date +%Y.%m.%d)$CHAR
		fi 
	fi
fi

cat <<EOF > PLGVER
v${DATE}
EOF

echo "Plugin Version is $PLG_VERSION"

pushd client
npm --no-git-tag-version -f version ${APP_VERSION}
popd

TAG=`git describe --abbrev=0 --tags 2> /dev/null`

if [[ -z "$TAG" ]]; then
	COMMITS=`git --no-pager log --reverse --pretty=format:'- %s' | egrep -v '.*Closes' | egrep -v '.*Merge' 2> /dev/null`
else
	COMMITS=`git --no-pager log --reverse --pretty=format:'- %s' "$TAG"...HEAD | egrep -v '.*Closes' | egrep -v '.*Merge' 2> /dev/null`
fi

PREVIOUS=`cat metadata/changes/${TAG}.txt 2> /dev/null`

cat <<EOF > metadata/changes/${APP_VERSION}.txt
`date +%F` - ${APP_VERSION}
${COMMITS}

${PREVIOUS}
EOF

code metadata/changes/${APP_VERSION}.txt

echo "Bumped versions successfully"
